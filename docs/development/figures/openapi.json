{
  "openapi": "3.0.1",
  "info": {
    "title": "Cloudogu User Management",
    "description": "Api description for cloudogu User Management",
    "version": "0.1"
  },
  "servers": [
    {
      "url": "https://192.168.56.2/usermgt"
    }
  ],
  "paths": {
    "/api/groups": {
      "get": {
        "description": "Get a list with all groups.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                },
                "examples": {
                  "0": {
                    "value": "{\"entries\":[{\"description\":\"This group grants administrative rights to all development applications of cloudogu\",\"members\":[\"admin\",\"admin2\"],\"name\":\"admin2\"},{\"description\":\"Members of the cesManager group have full access to the cloudogu administration applications\",\"members\":[\"admin\"],\"name\":\"cesManager\"}],\"start\":0,\"limit\":20,\"totalEntries\":2}"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Create a new group",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/api_groups_body"
              },
              "examples": {
                "0": {
                  "value": "{\n    \"description\": \"mynewgroup description\",\n    \"members\": [\n        \"admin2\"\n    ],\n    \"name\": \"mynewgroupname\"\n}"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          }
        }
      }
    },
    "/api/users": {
      "get": {
        "description": "Get paginated user data",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "required": false,
            "description": "Page number to retrieve"
          },
          {
            "in": "query",
            "name": "page_size",
            "schema": {
              "type": "integer",
              "default": 20
            },
            "required": false,
            "description": "Number of items per page"
          },
          {
            "in": "query",
            "name": "sort_by",
            "schema": {
              "type": "string",
              "default": "username"
            },
            "required": false,
            "description": "Item used to sort the result"
          },
          {
            "in": "query",
            "name": "order_by",
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": ["asc", "desc"]
            },
            "required": false,
            "description": "Direction of sorting"
          },
          {
            "in": "query",
            "name": "context",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "The context ID that may be used to help the server continue in the same result set for subsequent searches"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_1"
                },
                "example": {
                  "meta": {
                    "page": 3,
                    "pageSize": 50,
                    "totalPages": 13
                  },
                  "data": [
                    {
                      "displayName": "admin",
                      "givenname": "admin",
                      "mail": "admin@ces.local",
                      "memberOf": ["admin2", "cesManager"],
                      "password": "__dummypassword",
                      "pwdReset": false,
                      "surname": "admin",
                      "username": "admin"
                    },
                    {
                      "displayName": "admin2",
                      "givenname": "admin2",
                      "mail": "admin2@test.de",
                      "memberOf": [],
                      "password": "__dummypassword",
                      "pwdReset": true,
                      "surname": "admin2",
                      "username": "admin2"
                    },
                    {
                      "displayName": "test",
                      "givenname": "test",
                      "mail": "test@cloudogu.com",
                      "memberOf": [],
                      "password": "__dummypassword",
                      "pwdReset": false,
                      "surname": "test",
                      "username": "testuser"
                    }
                  ],
                  "links": {
                    "self": "/api/v2/users?page=3&pageSize=50",
                    "first": null,
                    "prev": "/api/v2/users?page=2&pageSize=50",
                    "next": "/api/v2/users?page=4&pageSize=50",
                    "last": null
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Create a new user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/api_users_body"
              },
              "examples": {
                "0": {
                  "value": "{\n    \"memberOf\": [],\n    \"username\": \"mynewusertocreate2\",\n    \"givenname\": \"mynewusertocreate\",\n    \"surname\": \"mynewusertocreate\",\n    \"displayName\": \"mynewusertocreate\",\n    \"mail\": \"mynewusertocreate2@test.de\",\n    \"password\": \"mynewusertocreate\",\n    \"pwdReset\": true\n}"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Auto generated using Swagger Inspector"
          }
        }
      }
    },
    "/api/users/import": {
      "post": {
        "summary": "Import Users from CSV",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "CSV file to be imported"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful import",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/users/import/{importID}": {
      "get": {
        "summary": "Get Import Result",
        "parameters": [
          {
            "name": "importID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The ID of the import result."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Invalid UUID",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Result not found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Import Result",
        "description": "Deletes an import result by its ID.",
        "parameters": [
          {
            "name": "importID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The ID of the import result to delete."
          }
        ],
        "responses": {
          "204": {
            "description": "Import result deleted successfully."
          },
          "400": {
            "description": "Invalid UUID provided in the request."
          },
          "500": {
            "description": "Internal server error while deleting the import result."
          }
        }
      }
    },
    "/api/users/import/{importID}/download": {
      "get": {
        "summary": "Download Import Result",
        "description": "Downloads an import result in JSON format by its ID.",
        "parameters": [
          {
            "name": "importID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The ID of the import result to download."
          }
        ],
        "responses": {
          "200": {
            "description": "Import result downloaded successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            },
            "headers": {
              "Content-Disposition": {
                "description": "File attachment header",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid UUID provided in the request or an error occurred."
          },
          "404": {
            "description": "Import result with the specified ID not found."
          }
        }
      }
    },
    "/api/users/import/summaries": {
      "get": {
        "summary": "Get summaries",
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "description": "Start index for pagination (default: 0)",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of items to return per page (default: 10, maximum: 100)",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultListSummary"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/groups/{groupname}/members/{username}": {
      "post": {
        "description": "Adds a user to a group. Fails if user is already member of the group.",
        "parameters": [
          {
            "name": "groupname",
            "in": "path",
            "description": "Name of the group",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "username",
            "in": "path",
            "description": "Name of the user",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/members_username_body"
              },
              "examples": {
                "0": {
                  "value": "{\n    \"displayName\": \"admin\",\n    \"givenname\": \"admin\",\n    \"mail\": \"admin@ces.local\",\n    \"memberOf\": [\n        \"admin2\",\n        \"cesManager\"\n    ],\n    \"password\": \"admin\",\n    \"pwdReset\": false,\n    \"surname\": \"admin\",\n    \"username\": \"admin\"\n}"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "409": {
            "description": "Error -> User is already part of the group."
          }
        }
      },
      "delete": {
        "description": "Removes a user from a group.",
        "parameters": [
          {
            "name": "groupname",
            "in": "path",
            "description": "Name of the group",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "username",
            "in": "path",
            "description": "Name of the user",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "success."
          }
        }
      }
    },
    "/api/account/passwordpolicy": {
      "get": {
        "description": "Returns the configured password policy",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_2"
                },
                "examples": {
                  "0": {
                    "value": "{ \"Rules\": [] }"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/account/gui_config": {
      "get": {
        "description": "Returns the configured gui config.",
        "responses": {
          "200": {
            "description": "Returns the configured gui config.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_3"
                },
                "examples": {
                  "0": {
                    "value": "{ \"pwdResetPreselected\": false}"
                  },
                  "1": {
                    "value": "{ \"pwdResetPreselected\": true}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/account": {
      "get": {
        "description": "Returns the currently logged in account. Password will be replaced with _dummypassword.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/members_username_body"
                },
                "examples": {
                  "0": {
                    "value": "{\"displayName\":\"admin\",\"givenname\":\"admin\",\"mail\":\"admin@ces.local\",\"memberOf\":[\"admin2\",\"cesManager\"],\"password\":\"__dummypassword\",\"pwdReset\":false,\"surname\":\"admin\",\"username\":\"admin\"}"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "Creates a new account.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/api_account_body"
              },
              "examples": {
                "0": {
                  "value": "{\n    \"displayName\": \"admin\",\n    \"givenname\": \"admin\",\n    \"mail\": \"admin@ces.local\",\n    \"memberOf\": [\n        \"admin2\",\n        \"cesManager\"\n    ],\n    \"password\": \"admin\",\n    \"pwdReset\": false,\n    \"surname\": \"admin\",\n    \"username\": \"admin\"\n}"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/api/users/{username}/groups/{groupname}": {
      "post": {
        "description": "Adds a group member.",
        "parameters": [
          {
            "name": "groupname",
            "in": "path",
            "description": "Name of the group",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "username",
            "in": "path",
            "description": "Name of the user",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "409": {
            "description": "Error -> User is already member of the group"
          }
        }
      },
      "delete": {
        "description": "Removes a member from a group.",
        "parameters": [
          {
            "name": "groupname",
            "in": "path",
            "description": "Name of the group",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "username",
            "in": "path",
            "description": "Name of the user",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/api/groups/mynewgroupname": {
      "delete": {
        "description": "Deletes a group",
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/api/groups/undeletable": {
      "get": {
        "description": "Returns all undeletable system groups.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api_groups_undeletable_body"
                },
                "examples": {
                  "0": {
                    "value": "[\"admin\",\"cesManager\"]"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "members_username_body": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string"
          },
          "pwdReset": {
            "type": "boolean"
          },
          "mail": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "givenname": {
            "type": "string"
          },
          "surname": {
            "type": "string"
          },
          "memberOf": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "username": {
            "type": "string"
          }
        }
      },
      "inline_response_200_1_data": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "Display name of the user"
          },
          "givenname": {
            "type": "string",
            "description": "Given name of the user"
          },
          "mail": {
            "type": "string",
            "format": "email",
            "description": "Email address of the user"
          },
          "memberOf": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of groups the user belongs to"
          },
          "password": {
            "type": "string",
            "description": "Password of the user (dummy data)"
          },
          "pwdReset": {
            "type": "boolean",
            "description": "Indicates whether the user's password needs to be reset"
          },
          "surname": {
            "type": "string",
            "description": "Surname of the user"
          },
          "username": {
            "type": "string",
            "description": "Username of the user"
          }
        },
        "example": null
      },
      "api_users_body": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string"
          },
          "pwdReset": {
            "type": "boolean"
          },
          "mail": {
            "type": "string"
          },
          "givenname": {
            "type": "string"
          },
          "surname": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "memberOf": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "username": {
            "type": "string"
          }
        }
      },
      "inline_response_200_entries": {
        "type": "object",
        "properties": {
          "members": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "example": null
      },
      "inline_response_200_1": {
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "properties": {
              "page": {
                "type": "integer",
                "description": "Current page number"
              },
              "pageSize": {
                "type": "integer",
                "description": "Number of items per page"
              },
              "totalPages": {
                "type": "integer",
                "description": "Total number of pages"
              }
            }
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_1_data"
            }
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "description": "Link to the current page",
                "example": "/api/v2/users?page=3&pageSize=50"
              },
              "first": {
                "type": "string",
                "nullable": true,
                "description": "Link to the first page (null if unavailable)"
              },
              "prev": {
                "type": "string",
                "description": "Link to the previous page"
              },
              "next": {
                "type": "string",
                "description": "Link to the next page"
              },
              "last": {
                "type": "string",
                "nullable": true,
                "description": "Link to the last page (null if unavailable)"
              }
            }
          }
        }
      },
      "inline_response_200": {
        "type": "object",
        "properties": {
          "entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_entries"
            }
          },
          "start": {
            "type": "integer"
          },
          "limit": {
            "type": "integer"
          },
          "totalEntries": {
            "type": "integer"
          }
        }
      },
      "inline_response_200_2": {
        "type": "object",
        "properties": {
          "Rules": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "api_account_body": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string"
          },
          "pwdReset": {
            "type": "boolean"
          },
          "mail": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "givenname": {
            "type": "string"
          },
          "surname": {
            "type": "string"
          },
          "memberOf": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "username": {
            "type": "string"
          }
        }
      },
      "inline_response_200_3": {
        "type": "object",
        "properties": {
          "pwdResetPreselected": {
            "type": "boolean"
          }
        }
      },
      "api_groups_body": {
        "type": "object",
        "properties": {
          "members": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "api_groups_undeletable_body":{
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "Result": {
        "type": "object",
        "properties": {
          "importID": {
            "type": "string",
            "description": "The ID of the import result."
          },
          "filename": {
            "type": "string",
            "description": "The filename of the import result."
          },
          "timestamp": {
            "type": "integer",
            "format": "int64",
            "description": "The timestamp of the import result."
          },
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api_users_body"
            },
            "description": "List of created users."
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api_users_body"
            },
            "description": "List of updated users."
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImportError"
            },
            "description": "List of import errors."
          }
        }
      },
      "ImportError": {
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "integer",
            "description": "The error code representing the type of error."
          },
          "lineNumber": {
            "type": "integer",
            "description": "The line number of the import error."
          },
          "message": {
            "type": "string",
            "description": "The error message describing the reason for the error."
          },
          "params": {
            "type": "object",
            "properties": {
              "columns": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "List of affected columns in case of an error."
              }
            }
          }
        },
        "required": ["errorCode", "lineNumber", "message"]
      },
      "PagedResultListSummary": {
        "type": "object",
        "properties": {
          "entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImportSummary"
            }
          },
          "start": {
            "type": "integer"
          },
          "limit": {
            "type": "integer"
          },
          "totalEntries": {
            "type": "integer"
          }
        }
      },
      "ImportSummary": {
        "type": "object",
        "properties": {
          "importID": {
            "type": "string",
            "description": "The ID of the import."
          },
          "filename": {
            "type": "string",
            "description": "The filename of the import."
          },
          "created": {
            "type": "integer",
            "description": "The number of users created during the import."
          },
          "updated": {
            "type": "integer",
            "description": "The number of users updated during the import."
          },
          "skipped": {
            "type": "integer",
            "description": "The number of rows skipped during the import."
          }
        }
      }
    },
    "securitySchemes": {
      "basic": {
        "type": "http",
        "scheme": "basic"
      }
    }
  }
}