diff --git a/app/src/main/java/de/triology/universeadm/DisableCacheResponseFilter.java b/app/src/main/java/de/triology/universeadm/DisableCacheResponseFilter.java
index 27f7ebf..1f101d6 100644
--- a/app/src/main/java/de/triology/universeadm/DisableCacheResponseFilter.java
+++ b/app/src/main/java/de/triology/universeadm/DisableCacheResponseFilter.java
@@ -64,6 +64,6 @@ public class DisableCacheResponseFilter implements ContainerResponseFilter
       "no-cache, no-store, must-revalidate");
     responseContext.getHeaders().putSingle("Pragma", "no-cache");
     responseContext.getHeaders().putSingle("Expires", 0);
-    
+    requestContext.getHeaders().putSingle("Access-Control-Allow-Origin", "*");
   }
 }
diff --git a/app/src/main/ui/.env b/app/src/main/ui/.env
index efaf6a5..5cc1be5 100644
--- a/app/src/main/ui/.env
+++ b/app/src/main/ui/.env
@@ -1,2 +1,2 @@
-AUTH_USER=ces-admin
-AUTH_PASSWORD=ecosystem2016
\ No newline at end of file
+AUTH_USER=admin
+AUTH_PASSWORD=admin
\ No newline at end of file
diff --git a/app/src/main/ui/src/api/axios.ts b/app/src/main/ui/src/api/axios.ts
index 138616d..83e3c22 100644
--- a/app/src/main/ui/src/api/axios.ts
+++ b/app/src/main/ui/src/api/axios.ts
@@ -2,6 +2,12 @@ import axios from "axios";
 
 const contextPath = process.env.PUBLIC_URL || "/usermgt";
 
-export const Axios = axios.create({
+export const Axios = process.env.NODE_ENV === "development" ? axios.create({
+    baseURL: `${contextPath}/api`,
+    auth: {
+        username: "admin",
+        password: "admin"
+    }
+}) : axios.create({
     baseURL: `${contextPath}/api`,
 });
diff --git a/docs/development/local_development_settings.patch b/docs/development/local_development_settings.patch
index 3911248..e69de29 100644
--- a/docs/development/local_development_settings.patch
+++ b/docs/development/local_development_settings.patch
@@ -1,106 +0,0 @@
-Subject: [PATCH] local development settings
----
-Index: app/src/main/java/de/triology/universeadm/DisableCacheResponseFilter.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/de/triology/universeadm/DisableCacheResponseFilter.java b/app/src/main/java/de/triology/universeadm/DisableCacheResponseFilter.java
---- a/app/src/main/java/de/triology/universeadm/DisableCacheResponseFilter.java	(revision 07df04aec92ef32e3b5d95f1fc27d1e37ab013b3)
-+++ b/app/src/main/java/de/triology/universeadm/DisableCacheResponseFilter.java	(date 1677242851122)
-@@ -64,6 +64,6 @@
-       "no-cache, no-store, must-revalidate");
-     responseContext.getHeaders().putSingle("Pragma", "no-cache");
-     responseContext.getHeaders().putSingle("Expires", 0);
--    
-+    requestContext.getHeaders().putSingle("Access-Control-Allow-Origin", "*");
-   }
- }
-Index: app/src/main/ui/vite.config.ts
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/ui/vite.config.ts b/app/src/main/ui/vite.config.ts
---- a/app/src/main/ui/vite.config.ts	(revision 07df04aec92ef32e3b5d95f1fc27d1e37ab013b3)
-+++ b/app/src/main/ui/vite.config.ts	(date 1678357586561)
-@@ -1,28 +1,28 @@
--import { defineConfig } from 'vite'
--import react from '@vitejs/plugin-react'
-+import react from "@vitejs/plugin-react";
-+import { defineConfig } from "vite";
- 
- export default defineConfig({
--  plugins: [react()],
--  assetsInclude: ['**/*.svg'],
--  define: {
--    'process.env': process.env
--  },
--  base: "/usermgt/",
--  server: {
--    proxy: {
--      "/usermgt/api": {
--        target: "http://localhost:8080",
--        changeOrigin: true,
--        secure: false,
--      },
--      "/usermgt/downloads": {
--        target: "http://localhost:8080",
--        changeOrigin: true,
--        secure: false,
--      }
--    },
--  },
--  build: {
--    chunkSizeWarningLimit: 2048
--  }
--})
-\ No newline at end of file
-+    plugins: [react()],
-+    assetsInclude: ["**/*.svg"],
-+    define: {
-+        "process.env": process.env
-+    },
-+    base: "/usermgt",
-+    server: {
-+        proxy: {
-+            "/usermgt/api": {
-+                target: "https://192.168.56.2",
-+                changeOrigin: true,
-+                secure: false,
-+            },
-+            "/usermgt/downloads": {
-+                target: "http://192.168.56.2",
-+                changeOrigin: true,
-+                secure: false,
-+            }
-+        },
-+    },
-+    build: {
-+        chunkSizeWarningLimit: 2048
-+    }
-+});
-\ No newline at end of file
-Index: app/src/main/ui/src/api/axios.ts
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/ui/src/api/axios.ts b/app/src/main/ui/src/api/axios.ts
---- a/app/src/main/ui/src/api/axios.ts	(revision 07df04aec92ef32e3b5d95f1fc27d1e37ab013b3)
-+++ b/app/src/main/ui/src/api/axios.ts	(date 1677872484959)
-@@ -2,6 +2,12 @@
- 
- const contextPath = process.env.PUBLIC_URL || "/usermgt";
- 
--export const Axios = axios.create({
-+export const Axios = process.env.NODE_ENV === "development" ? axios.create({
-+    baseURL: `${contextPath}/api`,
-+    auth: {
-+        username: 'gary',
-+        password: 'admin'
-+    }
-+}) : axios.create({
-     baseURL: `${contextPath}/api`,
--});
-+})
